version: '3'
services:
  app-pgstac:
    container_name: stac-fastapi-pgstac-acer
    build: .
    platform: linux/amd64
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8082
      - RELOAD=true
      - ENVIRONMENT=production
      - POSTGRES_USER=${ACERPGUSER}
      - POSTGRES_PASS=${ACERPGPASSWORD}
      - POSTGRES_DBNAME=${ACERPGDATABASE}
      - POSTGRES_HOST_READER=${ACERPGHOST}
      - POSTGRES_HOST_WRITER=${ACERPGHOST}
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=10
      - VSI_CACHE=TRUE
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
      - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
      - FORWARDED_ALLOW_IPS=*
      - OPENAPI_URL=/api
      - DOCS_URL=/api.html
    ports:
      - "8083:8082"
    volumes:
      - ./stac_fastapi:/app/stac_fastapi
      - ./scripts:/app/scripts
    depends_on:
      - database
    restart: always
    command:
      bash -c "./scripts/wait-for-it.sh database:5432 && python -m stac_fastapi.pgstac.app"

  database:
    container_name: stac-db-acer
    image: ghcr.io/stac-utils/pgstac:v0.7.6
    environment:
      - POSTGRES_USER=${ACERPGUSER}
      - POSTGRES_PASSWORD=${ACERPGPASSWORD}
      - POSTGRES_DB=${ACERPGDATABASE}
      - PGUSER=${ACERPGUSER}
      - PGPASSWORD=${ACERPGPASSWORD}
      - PGHOST=localhost
      - PGDATABASE=${ACERPGDATABASE}
    ports:
      - "5440:5432"
    volumes:
      - ./backup:/backup
    restart: always
    command: postgres -N 500

networks:
  default:
    name: stac-fastapi-network-acer

